<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby
#
# DESCRIPTION
#	Opens FileMaker log for hosted files and filters to latest entry
#

require 'etc'
$LOAD_PATH &lt;&lt; "#{ENV['TM_SUPPORT_PATH']}/lib"
require 'exit_codes.rb'

divider = "---------------------------------------------------"
patternSpace = " "
result = " "
i = 1

# Read file
begin
	text = File.open(Etc.getpwuid.dir + "/Documents/Import.log", "rb") {|io| io.read}
rescue =&gt; err
	puts "No server log found"
    TextMate.exit_show_tool_tip
end

# Constrain to latest entry
text = text.split(/(^.*?Import operations started)/)[-2,2].join

# Extract errors
text.split("\n").each {|line|

	# Skip dividers between imports
	if line.scan(/={5}/).length &gt; 0
		result &lt;&lt; "\n" &lt;&lt; line
		patternSpace = ""

	# If on new object, reset patternSpace
	elsif line.scan(/ -[0-9]{4}\t/).length &gt; 0

		# Print patternSpace if matching
		if patternSpace.include?("missing") or patternSpace.include?("Unknown Error")
			patternSpace.gsub!(/[0-9:.\- ]+\t(.*?)/,'\1')
			result &lt;&lt; "\n#{divider}\n" &lt;&lt; patternSpace
			i = i + 1
		end
		patternSpace = line

	# Else, add line to patternSpace
	else
		patternSpace &lt;&lt; "\n" &lt;&lt; line
	end
}

if result.strip.length &gt; 0
	print result
else
	puts "No errors found in latest entry"
	TextMate.exit_show_tool_tip
end</string>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Open Server Log Latest Errors</string>
	<key>output</key>
	<string>openAsNewDocument</string>
	<key>scope</key>
	<string>text.fmlog</string>
	<key>uuid</key>
	<string>218DC18A-0984-4772-8DC0-CEE01B2C111C</string>
</dict>
</plist>
