<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby

#!/usr/bin/ruby

require 'date'

class FMFunction
  attr_accessor :prototype_label, :purpose_label, :history_label, :example_label, :template
  attr_reader :prototype, :purpose, :history, :example, :text, :doc

  def initialize(text)
    @dash = "\342\200\224"
    @text = text
    @doc = self.get_doc
    @prototype_label = "NAME:"
    @purpose_label = "PURPOSE:"
    @history_label = "HISTORY:"
    @example_label = "EXAMPLES:"
    @template = &lt;&lt;-END
/* __________________________________________________

NAME:\t#{@prototype}
PURPOSE:\t#{@purpose}
EXAMPLES:
#{@example}
HISTORY:
#{@history}
*/
END
  end

  def to_s
    @text
  end

  def get_doc(text=self.to_s)
    doc = text.match(%r{/\*\s*.*\*/}m)
    @doc = doc.to_s
  end

  def get_match(label, text=self.doc)
    found = text.match(/#{label}[\s\n]*?(.+?)\n/)
    return '' unless found
    found[1]
  end

  def get_prototype(text=self.doc)
    @prototype = self.get_match(@prototype_label).strip
  end

  def get_purpose(text=self.doc)
    @purpose = self.get_match(@purpose_label).strip
  end

  def get_example(text=self.doc)
    found = text.match(%r{#{@example_label}[\s\n]*(.+)#{@history_label}|\*/}m)
    @example = '' unless found
    @example = found[1].strip
  end

  def get_history(text=self.doc)
    found = text.match(%r{#{@history_label}[\s\n]*(.+)\*/}m)
    @history = '' unless found
    @history = self.convert_history(found[1])
  end

  def convert_history(text)
    self.convert_timestamp(text).split(/\n/).map do |line|
      line.lstrip.gsub(': ',":\t")
    end.join("\n").strip
  end

  def convert_timestamp(text)
    dateStr = text.gsub(/\d{4}.*-/) do |timestamp|
      Date.parse(timestamp).strftime('%Y-%m-%y') + ' PST -'
    end
  end

  def parse(text=self.doc)
    self.get_prototype
    self.get_purpose
    self.get_example
    self.get_history
&lt;&lt;-END
/* __________________________________________________

NAME:\t\t#{@prototype}
PURPOSE:\t#{@purpose}
EXAMPLES:
#{@example.gsub(/^/,"\t")}
HISTORY:
#{@history.gsub(/^/,"\t")}
*/
END
  end

  def convert
    @text.gsub(self.get_doc,self.parse)
  end

end

text = STDIN.read
f = FMFunction.new(text)
puts f.convert</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Convert Function Doc Format</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>B2816A15-84CC-43A7-8BB3-12F47CE1E972</string>
</dict>
</plist>
