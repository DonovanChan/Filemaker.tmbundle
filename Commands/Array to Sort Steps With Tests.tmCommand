<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby
#
# DESCRIPTION
#	See documentation section below.
#
# USAGE
#	Instructions printed when input is empty.
#	See documentation section below.
#

require ENV['TM_BUNDLE_SUPPORT'] + ENV['TM_PATH_FILEMAKER']

text = STDIN.read

# Documentation
if text.empty?
	tips = ENV['TM_DOC_TIPS']
	puts &lt;&lt;EOF
DESCRIPTION
	Generates FileMaker snippet of Sort script steps.
	Each sort step is preceded by an Else If statement.
	Dialogs are suppressed by default.
	Uses selected text or entire document.

EXAMPLE:
	Select the lines below and run the command again to see it work.

$_field = "name"\tCONTACT::Name_First\tDescending
$_field = "number"\tCONTACT::Phone1\tDescending

	=&gt; If [$_field = "name"]
	=&gt; 	Sort Records [Restore; No Dialog]
	=&gt; Else If [$_field = "number"]
	=&gt; 	Sort Records [Restore; No Dialog]
	=&gt; End If

EXAMPLE USAGE:
	Select the lines below and run the command again to see it work.

$_field_name = GetFieldName ( CONTACT::NameLast )\tCONTACT::NameLast\tdescending
$_field_name = GetFieldName ( CONTACT::NameFirst )\tCONTACT::NameFirst\tascending

PARAMETERS:
	col1 = test
	col2 = sort field
	col3 = sort direction (optional) [ascending|descending]

TIPS:
#{tips}
EOF
	exit
end

# Generate Fields
doc = Snippet.new
rep = 0
text.split(/\n/).each { |row|
	col = row.split(/\t/)
	calc = col[0]
	rep += 1
	rep == 1 ? doc.stepIf(calc) : doc.stepElseIf(calc)
	arg = [{
		:field			=&gt; col[1],
		:direction		=&gt; col[2]
	}]
	doc.stepSort(arg)
}
doc.stepEndIf
print doc
</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Array to Sort Steps With Tests</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>7BD516A9-A36B-4E65-AC45-6CF7C77F858A</string>
</dict>
</plist>
