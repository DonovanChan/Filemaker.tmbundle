<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby
#
# DESCRIPTION
#	 Prompts for files and loads them to clipboard as custom functions.
#

require ENV['TM_BUNDLE_SUPPORT'] + ENV['TM_PATH_FILEMAKER']

$LOAD_PATH &lt;&lt; "#{ENV['TM_SUPPORT_PATH']}/lib"
require 'exit_codes.rb'
require 'ui.rb'
include TextMate

# Use files selected in project window, if multiple selected
# Else, prompt for files
fileArray = ENV['TM_SELECTED_FILES'].split("' '")
if fileArray.length &gt; 1
	fileArray.map{|x| x.gsub!(/'/,'') }
else
	fileArray = UI::request_files({"text" =&gt; "Select files containing custom functions you'd like loaded to the clipboard"})
end

# Documentation
unless fileArray.length &gt; 0
	text = &lt;&lt;EOF
No files selected.

DESCRIPTION:
	Loads calculations in text files to clipboard as FileMaker custom functions.

USAGE INSTRUCTIONS:
	Run this command and select appropriate files when prompted.
	Or, select multiple files in the project panel to bypass prompt./Users/donovan/Repository/gitRepos/fmfunctions/IsMac.calc/Users/donovan/Repository/gitRepos/fmfunctions/IsMac.calc

NOTES:
	Selected files must be in recognized format to be loaded properly.
	Recognized format matches the Custom Function template provided in this bundle.
	The essential aspect really is to have a full syntax example of your function written after a label matching this: "#{ENV['TM_FUNCTION_EXAMPLE_LABEL']}".
	You can customize this label in the bundle variables.
EOF
	puts text
	TextMate.exit_replace_text
end

begin

	doc = Snippet.new
	fileArray.each do |file|
		text = File.new("#{file}","r").read

		# Parse function attributes
		calc = doc.parse_function(text,ENV['TM_FUNCTION_EXAMPLE_LABEL'])
		
		# Create function snippet
		doc.append(calc) unless calc.nil?
		
	end
	
	# Load to pasteboard
	result = doc.set
	raise 'Unrecognized function format' if result.nil?
	
	# Return feedback
	puts "Function#{'s' if fileArray.length &gt; 1} ready to paste into FileMaker"

rescue
	puts "Unrecognized function format.\nRun this command on an empty document for instructions."

end
</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^@l</string>
	<key>name</key>
	<string>Load Functions From Files</string>
	<key>output</key>
	<string>showAsTooltip</string>
	<key>uuid</key>
	<string>97786604-24F6-46A5-BFBD-74320CF51064</string>
</dict>
</plist>
