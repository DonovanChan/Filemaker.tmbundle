<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/ruby
#
# DESCRIPTION
#	Extracts errors from FileMaker log file
#

text = STDIN.read
divider = "---------------------------------------------------"
patternSpace = " "
result = " "
i = 1

text.split("\n").each {|line|

	# Skip dividers between imports
	if line.scan(/={5}/).length &gt; 0
		result &lt;&lt; "\n" &lt;&lt; line
		patternSpace = ""

	# If on new object, reset patternSpace
	elsif line.scan(/ -[0-9]{4}\t/).length &gt; 0

		# Print patternSpace if matching
		if patternSpace.include?("missing") or patternSpace.include?("Unknown Error")
			patternSpace.gsub!(/[0-9:.\- ]+\t(.*?)/,'\1')
			result &lt;&lt; "\n#{divider}\n" &lt;&lt; patternSpace
			i = i + 1
		end
		patternSpace = line

	# Else, add line to patternSpace
	else
		patternSpace &lt;&lt; "\n" &lt;&lt; line
	end
}
print result

# This is essentially my first Ruby script.  If you can do better, please show me! donovan_c@beezwax.net</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Extract Errors**</string>
	<key>output</key>
	<string>openAsNewDocument</string>
	<key>scope</key>
	<string>text.fmlog</string>
	<key>uuid</key>
	<string>346DF330-EE6F-48F2-8D45-0319014C71C7</string>
</dict>
</plist>
